/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
//#define ADJUST 3

/ {

    //Activate ADJUST layer by pressing raise and lower
    //conditional_layers {
    //    compatible = "zmk,conditional-layers";
    //    adjust_layer {
    //        if-layers = <LOWER RAISE>;
    //        then-layer = <ADJUST>;
    //    };
    //};

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";
            //    RC(0,0) RC(0,1) RC(0,2) RC(0,3)         RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9)                          RC(0,12) RC(0,13) RC(0,14) RC(0,15) RC(0,16) RC(0,17)      RC(0,18) RC(0,19) RC(0,20) RC(0,21)
            //    RC(1,0) RC(1,1) RC(1,2) RC(1,3)         RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10)        RC(1,11) RC(1,12) RC(1,13) RC(1,14) RC(1,15) RC(1,16) RC(1,17)      RC(1,18) RC(1,19) RC(1,20) RC(1,21)
            //    RC(2,0) RC(2,1) RC(2,2) RC(2,3)         RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10)        RC(2,11) RC(2,12) RC(2,13) RC(2,14) RC(2,15) RC(2,16) RC(2,17)      RC(2,18) RC(2,19) RC(2,20) RC(2,21)
            //    RC(3,0) RC(3,1) RC(3,2) RC(3,3)         RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(3,10)        RC(3,11) RC(3,12) RC(3,13) RC(3,14) RC(3,15) RC(3,16) RC(3,17)      RC(3,18) RC(3,19) RC(3,20) RC(3,21) 
            //                                                    RC(4,5) RC(4,6) RC(4,7) RC(4,8) RC(4,9) RC(4,10)        RC(4,11) RC(4,12) RC(4,13) RC(4,14) RC(4,15) RC(4,16)

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |
            bindings = <
        /*  0        1      2         3        ||  4         5        6        7         8          9        10        ||  11        12        13       14        15      16       17       ||  18       19     20        21      */            
            &kp N7   &kp N8 &kp N9    &kp DEL      &kp ESC   &kp N1   &kp N2   &kp N3    &kp N4    &kp N5                          &kp N6    &kp N7   &kp N8    &kp N9  &kp N0   &none        &kp N7   &kp N8 &kp N9    &kp DEL  
            &kp N4   &kp N5 &kp N6    &kp ASTRK    &kp TAB   &kp Q    &kp W    &kp E     &kp R     &kp T     &kp C_MUTE  &trans    &kp Y     &kp U    &kp I     &kp O   &kp P    &kp BSPC     &kp N4   &kp N5 &kp N6    &kp ASTRK
            &kp N1   &kp N2 &kp N3    &kp FLSH     &kp LSHFT &kp A    &kp S    &kp D     &kp F     &kp G     &kp C_MUTE  &trans    &kp H     &kp J    &kp K     &kp L   &kp SEMI &kp SQT      &kp N1   &kp N2 &kp N3    &kp FLSH
            &kp PLUS &kp N0 &kp MINUS &kp EQUAL    &kp CTRL  &kp Z    &kp X    &kp C     &kp V     &kp B     &kp C_MUTE  &trans    &kp N     &kp M    &kp COMMA &kp DOT &kp FSLH &kp RSHFT    &kp PLUS &kp N0 &kp MINUS &kp EQUAL
                                                             &kp LGUI &kp LALT &kp LCTRL &mo LOWER &kp SPACE &kp RET     &mo RAISE &kp RCTRL &kp RALT &kp RGUI
            >;
                sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            display-name = "lower";
            //    RC(0,0) RC(0,1) RC(0,2) RC(0,3)         RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9)                          RC(0,12) RC(0,13) RC(0,14) RC(0,15) RC(0,16) RC(0,17)      RC(0,18) RC(0,19) RC(0,20) RC(0,21)
            //    RC(1,0) RC(1,1) RC(1,2) RC(1,3)         RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10)        RC(1,11) RC(1,12) RC(1,13) RC(1,14) RC(1,15) RC(1,16) RC(1,17)      RC(1,18) RC(1,19) RC(1,20) RC(1,21)
            //    RC(2,0) RC(2,1) RC(2,2) RC(2,3)         RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10)        RC(2,11) RC(2,12) RC(2,13) RC(2,14) RC(2,15) RC(2,16) RC(2,17)      RC(2,18) RC(2,19) RC(2,20) RC(2,21)
            //    RC(3,0) RC(3,1) RC(3,2) RC(3,3)         RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(3,10)        RC(3,11) RC(3,12) RC(3,13) RC(3,14) RC(3,15) RC(3,16) RC(3,17)      RC(3,18) RC(3,19) RC(3,20) RC(3,21) 
            //                                                    RC(4,5) RC(4,6) RC(4,7) RC(4,8) RC(4,9) RC(4,10)        RC(4,11) RC(4,12) RC(4,13) RC(4,14) RC(4,15) RC(4,16)

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |
            bindings = <
        /*  0        1      2         3        ||  4         5        6        7         8          9        10        ||  11        12        13       14        15      16       17       ||  18       19     20        21      */            
            &kp N7   &kp N8 &kp N9    &kp DEL      &kp ESC   &kp N1   &kp N2   &kp N3    &kp N4    &kp N5                          &kp N6    &kp N7   &kp N8    &kp N9  &kp N0   &none        &kp N7   &kp N8 &kp N9    &kp DEL  
            &kp N4   &kp N5 &kp N6    &kp ASTRK    &kp TAB   &kp Q    &kp W    &kp E     &kp R     &kp T     &kp C_MUTE  &none     &kp Y     &kp U    &kp I     &kp O   &kp P    &kp BSPC     &kp N4   &kp N5 &kp N6    &kp ASTRK
            &kp N1   &kp N2 &kp N3    &kp FLSH     &kp LSHFT &kp A    &kp S    &kp D     &kp F     &kp G     &none       &none     &kp H     &kp J    &kp K     &kp L   &kp SEMI &kp SQT      &kp N1   &kp N2 &kp N3    &kp FLSH
            &kp PLUS &kp N0 &kp MINUS &kp EQUAL    &kp CTRL  &kp Z    &kp X    &kp C     &kp V     &kp B     &none       &none     &kp N     &kp M    &kp COMMA &kp DOT &kp FSLH &kp RSHFT    &kp PLUS &kp N0 &kp MINUS &kp EQUAL
                                                             &kp LGUI &kp LALT &kp LCTRL &mo LOWER &kp SPACE &kp RET     &mo RAISE &kp RCTRL &kp RALT &kp RGUI
            >;
                sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            display-name = "raise";
            ///    RC(0,0) RC(0,1) RC(0,2) RC(0,3)         RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9)                          RC(0,12) RC(0,13) RC(0,14) RC(0,15) RC(0,16) RC(0,17)      RC(0,18) RC(0,19) RC(0,20) RC(0,21)
            //    RC(1,0) RC(1,1) RC(1,2) RC(1,3)         RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10)        RC(1,11) RC(1,12) RC(1,13) RC(1,14) RC(1,15) RC(1,16) RC(1,17)      RC(1,18) RC(1,19) RC(1,20) RC(1,21)
            //    RC(2,0) RC(2,1) RC(2,2) RC(2,3)         RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10)        RC(2,11) RC(2,12) RC(2,13) RC(2,14) RC(2,15) RC(2,16) RC(2,17)      RC(2,18) RC(2,19) RC(2,20) RC(2,21)
            //    RC(3,0) RC(3,1) RC(3,2) RC(3,3)         RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(3,10)        RC(3,11) RC(3,12) RC(3,13) RC(3,14) RC(3,15) RC(3,16) RC(3,17)      RC(3,18) RC(3,19) RC(3,20) RC(3,21) 
            //                                                    RC(4,5) RC(4,6) RC(4,7) RC(4,8) RC(4,9) RC(4,10)        RC(4,11) RC(4,12) RC(4,13) RC(4,14) RC(4,15) RC(4,16)

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |
            bindings = <
        /*  0        1      2         3        ||  4         5        6        7         8          9        10        ||  11        12        13       14        15      16       17       ||  18       19     20        21      */            
            &kp N7   &kp N8 &kp N9    &kp DEL      &kp ESC   &kp N1   &kp N2   &kp N3    &kp N4    &kp N5                          &kp N6    &kp N7   &kp N8    &kp N9  &kp N0   &none        &kp N7   &kp N8 &kp N9    &kp DEL  
            &kp N4   &kp N5 &kp N6    &kp ASTRK    &kp TAB   &kp Q    &kp W    &kp E     &kp R     &kp T     &kp C_MUTE  &none     &kp Y     &kp U    &kp I     &kp O   &kp P    &kp BSPC     &kp N4   &kp N5 &kp N6    &kp ASTRK
            &kp N1   &kp N2 &kp N3    &kp FLSH     &kp LSHFT &kp A    &kp S    &kp D     &kp F     &kp G     &none       &none     &kp H     &kp J    &kp K     &kp L   &kp SEMI &kp SQT      &kp N1   &kp N2 &kp N3    &kp FLSH
            &kp PLUS &kp N0 &kp MINUS &kp EQUAL    &kp CTRL  &kp Z    &kp X    &kp C     &kp V     &kp B     &none       &none     &kp N     &kp M    &kp COMMA &kp DOT &kp FSLH &kp RSHFT    &kp PLUS &kp N0 &kp MINUS &kp EQUAL
                                                             &kp LGUI &kp LALT &kp LCTRL &mo LOWER &kp SPACE &kp RET     &mo RAISE &kp RCTRL &kp RALT &kp RGUI
            >;
                sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
